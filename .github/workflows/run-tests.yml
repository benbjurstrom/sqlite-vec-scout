name: run-tests

on:
  pull_request:
    paths:
      - '**.php'
      - '.github/workflows/run-tests.yml'
      - 'phpunit.xml.dist'
      - 'composer.json'
      - 'composer.lock'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    env:
      DB_CONNECTION: pgsql
      DB_HOST: localhost
      DB_USERNAME: $USER
      DB_DATABASE: laravel
      DB_PASSWORD: postgres
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        php: [8.3]
        laravel: [11.*]
        stability: [prefer-stable]
        include:
          - laravel: 11.*
            testbench: 9.*
            carbon: ^2.63

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Install Postgres
        uses: ankane/setup-postgres@v1
        with:
          database: laravel
          dev-files: true

      - run: |
          echo $USER
          psql -h localhost -U $USER -d laravel --no-password -c "ALTER USER postgres PASSWORD 'postgres';"

      - name: Install pgvector
        run: |
          cd /tmp
          git clone --branch v0.8.0 https://github.com/pgvector/pgvector.git
          cd pgvector
          make
          sudo make install

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" "nesbot/carbon:${{ matrix.os == 'windows-latest' && '^^^' || '' }}${{ matrix.carbon }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: List Installed Dependencies
        run: composer show -D

      - name: Execute tests
        run: vendor/bin/pest --ci
